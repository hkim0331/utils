#!/usr/bin/env ruby
#-*- coding: utf-8 -*-
# origin: ${utils}/shadow/shadow.rb
# desc: PATH 中でシャドーイングされているコマンドをリスト。
# author: programmed by Hiroshi Kimura, 2014-02-15.
#
# FIXME:
# * alias drop(1) as rest.
# * how to overwrite Dir.entries?
#
# FIXED:
# * 2019-03-30: ENV['PATH'] 中に存在しないフォルダが含まれる時

class Dir
  def Dir.my_entries(dir)
    Dir.entries(dir).find_all{|x| x !~ /\A\.{1,2}\Z/}
  end
end

def found_one?(cmd, dir)
  Dir.my_entries(dir).include?(cmd)
end

def found?(cmd, dirs)
  if dirs.empty?
    false
  else
    if found_one?(cmd, dirs.first)
      dirs.first
    else
      found?(cmd, dirs.drop(1))
    end
  end
end

def shadow_aux(dir, dirs)
  ret=[]
  Dir.my_entries(dir).each do |cmd|
    ret.push [File.join(dir,cmd), found?(cmd,dirs)]
  end
  ret.find_all{|r| r[1]}
end

def shadow(dirs)
  if dirs.empty?
    []
  else
    shadow_aux(dirs.first, dirs.drop(1)) + shadow(dirs.drop(1))
  end
end
#
# main starts here
#

# exclude rbenv 'cause symlink is for purpose.
# bugfix 2019-03-30
# paths = ENV['PATH'].split(/:/).find_all{|x| x !~ /rbenv/}
dirs = ENV['PATH'].split(/:/).select{|x| Dir.exists?(x)}
paths = dirs.find_all{|x| x !~ /rbenv/}

shadow(paths).each do |ret|
  puts "#{ret[0]} shadows #{ret[1]}/#{File.basename(ret[0])}"
end
